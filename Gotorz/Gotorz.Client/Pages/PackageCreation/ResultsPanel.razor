@using Shared.Enums
@using Shared.Models
@using Shared.Models.AmadeusCityResponse

<div class="results-area">
    @if (CurrentSearchMode == SearchMode.Flights)
    {
        <div class="flight-results">
            <!-- Outbound Flights -->
            <div class="outbound-flights">
                <h4>✈️ Outbound Flights</h4>
                @if (IsLoadingFlights)
                {
                    <div class="loading-container">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p>Searching for outbound flights...</p>
                    </div>
                }
                else if (FlightError)
                {
                    <div class="error-message">
                        Error loading flight data. Please try again.
                    </div>
                }
                else if (OutboundFlights.Any())
                {
                    <table class="results-table">
                        <thead>
                            <tr>
                                <th></th>
                                <th>Carrier</th>
                                <th>Duration</th>
                                <th>Price</th>
                                <th>Route</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var flight in OutboundFlights)
                            {
                                <tr class="@(SelectedOutboundFlight == flight ? "selected-row" : "")">
                                    <td>
                                        <input type="radio"
                                               name="outboundFlight"
                                               value="@flight"
                                               @onchange="@(() => OnFlightSelected.InvokeAsync((flight, true)))"
                                               checked="@(SelectedOutboundFlight == flight)" />
                                    </td>
                                    <td>@flight.Itineraries[0].Segments[0].CarrierCode</td>
                                    <td>@flight.Itineraries[0].Duration.Replace("PT", "")</td>
                                    <td>@flight.Price.Currency @flight.Price.Total</td>
                                    <td>
                                        @foreach (var segment in flight.Itineraries[0].Segments)
                                        {
                                            <div>
                                                @segment.Departure.IataCode at @segment.Departure.At.ToString("HH:mm (yyyy-MM-dd)") <br>
                                                ➝ @segment.Arrival.IataCode at @segment.Arrival.At.ToString("HH:mm (yyyy-MM-dd)")
                                            </div>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="error-message">
                        No flight offers found. Please change your search.
                    </div>
                }
            </div>

            <!-- Return Flights -->
            <div class="return-flights">
                <h4>✈️ Return Flights</h4>
                @if (IsLoadingFlights)
                {
                    <div class="loading-container">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p>Searching for return flights...</p>
                    </div>
                }
                else if (FlightError)
                {
                    <div class="error-message">
                        Error loading flight data. Please try again.
                    </div>
                }
                else if (ReturnFlights.Any())
                {
                    <table class="results-table">
                        <thead>
                            <tr>
                                <th></th>
                                <th>Carrier</th>
                                <th>Duration</th>
                                <th>Price</th>
                                <th>Route</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var flight in ReturnFlights)
                            {
                                <tr class="@(SelectedReturnFlight == flight ? "selected-row" : "")">
                                    <td>
                                        <input type="radio"
                                               name="returnFlight"
                                               value="@flight"
                                               @onchange="@(() => OnFlightSelected.InvokeAsync((flight, false)))"
                                               checked="@(SelectedReturnFlight == flight)" />
                                    </td>
                                    <td>@flight.Itineraries[0].Segments[0].CarrierCode</td>
                                    <td>@flight.Itineraries[0].Duration.Replace("PT", "")</td>
                                    <td>@flight.Price.Currency @flight.Price.Total</td>
                                    <td>
                                        @foreach (var segment in flight.Itineraries[0].Segments)
                                        {
                                            <div>
                                                @segment.Departure.IataCode at @segment.Departure.At.ToString("HH:mm (yyyy-MM-dd)") <br>
                                                ➝ @segment.Arrival.IataCode at @segment.Arrival.At.ToString("HH:mm (yyyy-MM-dd)")
                                            </div>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else if (ReturnFlights.Count == 0)
                {
                    <div class="info-message">
                        @(ReturnFlights.Count == 0 ? "No return flight offers available." : "One-way trip selected (no return date).")
                    </div>
                }
            </div>
        </div>
    }
    else if (CurrentSearchMode == SearchMode.Hotels)
    {
        <div class="hotel-results">
            <h4>🏨 Available Hotels</h4>
            @if (IsLoadingHotels)
            {
                <div class="loading-container">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p>Searching for hotels...</p>
                </div>
            }
            else if (HotelError)
            {
                <div class="error-message">
                    Error loading hotel data. Please try again.
                </div>
            }
            else if (HotelOffers?.Data?.Any() == true)
            {
                <table class="results-table">
                    <thead>
                        <tr>
                            <th></th>
                            <th>Hotel Name</th>
                            <th>Price</th>
                            <th>Details</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var hotel in HotelOffers.Data)
                        {
                            <tr class="@(SelectedHotel == hotel ? "selected-row" : "")">
                                <td>
                                    <input type="radio"
                                           name="hotel"
                                           value="@hotel"
                                           @onchange="@(() => OnHotelSelected.InvokeAsync(hotel))"
                                           checked="@(SelectedHotel == hotel)" />
                                </td>
                                <td>
                                    <strong>
                                        <a href="https://www.google.com/search?q=@Uri.EscapeDataString(hotel.Hotel.Name)"
                                           target="_blank">
                                            @hotel.Hotel.Name
                                        </a>
                                    </strong>
                                </td>
                                <td>
                                    @{
                                        var offer = hotel.Offers?.FirstOrDefault();
                                        var price = offer?.Price?.Total ?? "0";
                                        var currency = offer?.Price?.Currency ?? "EUR";
                                    }
                                    @price @currency
                                </td>
                                <td>
                                    @if (offer?.BoardType != null)
                                    {
                                        <div>Board: @offer.BoardType</div>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="error-message">
                    No hotel offers found. Please change your search.
                </div>
            }
        </div>
    }
</div>

@code {
    [Parameter] public SearchMode CurrentSearchMode { get; set; }
    [Parameter] public List<FlightOffer> OutboundFlights { get; set; } = new();
    [Parameter] public List<FlightOffer> ReturnFlights { get; set; } = new();
    [Parameter] public HotelOfferRootModel? HotelOffers { get; set; }
    [Parameter] public FlightOffer? SelectedOutboundFlight { get; set; }
    [Parameter] public FlightOffer? SelectedReturnFlight { get; set; }
    [Parameter] public HotelData? SelectedHotel { get; set; }
    [Parameter] public EventCallback<(FlightOffer flight, bool isOutbound)> OnFlightSelected { get; set; }
    [Parameter] public EventCallback<HotelData> OnHotelSelected { get; set; }
    [Parameter] public bool IsLoadingFlights { get; set; }
    [Parameter] public bool IsLoadingHotels { get; set; }
    [Parameter] public bool FlightError { get; set; }
    [Parameter] public bool HotelError { get; set; }
}